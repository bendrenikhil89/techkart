[{"D:\\React\\techkart\\client\\src\\index.js":"1","D:\\React\\techkart\\client\\src\\reportWebVitals.js":"2","D:\\React\\techkart\\client\\src\\App.js":"3","D:\\React\\techkart\\client\\src\\components\\Navbar\\Navbar.js":"4","D:\\React\\techkart\\client\\src\\components\\Auth\\Login\\Login.js":"5","D:\\React\\techkart\\client\\src\\components\\Auth\\SignUp\\SignUp.js":"6","D:\\React\\techkart\\client\\src\\utils\\auth-util.js":"7","D:\\React\\techkart\\client\\src\\components\\Auth\\Confirmation\\Confirmation.js":"8","D:\\React\\techkart\\client\\src\\Reducers\\index.js":"9","D:\\React\\techkart\\client\\src\\Reducers\\userReducer.js":"10","D:\\React\\techkart\\client\\src\\components\\LoadingSpinner\\LoadingSpinner.js":"11","D:\\React\\techkart\\client\\src\\components\\AdminDashboard\\AdminLeftNav.js":"12","D:\\React\\techkart\\client\\src\\components\\Routes\\AdminRoute.js":"13","D:\\React\\techkart\\client\\src\\components\\Routes\\UserRoute.js":"14","D:\\React\\techkart\\client\\src\\pages\\ManageCategory.js":"15","D:\\React\\techkart\\client\\src\\pages\\ManageSubCategories.js":"16","D:\\React\\techkart\\client\\src\\pages\\ManageProducts.js":"17","D:\\React\\techkart\\client\\src\\pages\\ManageBannerImages.js":"18","D:\\React\\techkart\\client\\src\\utils\\categories-util.js":"19","D:\\React\\techkart\\client\\src\\utils\\subcategories-util.js":"20"},{"size":851,"mtime":1608921113696,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"22"},{"size":3419,"mtime":1609090458714,"results":"24","hashOfConfig":"22"},{"size":4374,"mtime":1609091133272,"results":"25","hashOfConfig":"22"},{"size":4270,"mtime":1608924962018,"results":"26","hashOfConfig":"22"},{"size":3253,"mtime":1608895977051,"results":"27","hashOfConfig":"22"},{"size":908,"mtime":1609049648146,"results":"28","hashOfConfig":"22"},{"size":2175,"mtime":1608906261599,"results":"29","hashOfConfig":"22"},{"size":183,"mtime":1608920381704,"results":"30","hashOfConfig":"22"},{"size":322,"mtime":1608920521970,"results":"31","hashOfConfig":"22"},{"size":210,"mtime":1608973359011,"results":"32","hashOfConfig":"22"},{"size":1302,"mtime":1609077673377,"results":"33","hashOfConfig":"22"},{"size":480,"mtime":1609066367328,"results":"34","hashOfConfig":"22"},{"size":484,"mtime":1609066371704,"results":"35","hashOfConfig":"22"},{"size":5872,"mtime":1609100758714,"results":"36","hashOfConfig":"22"},{"size":8525,"mtime":1609100800236,"results":"37","hashOfConfig":"22"},{"size":530,"mtime":1609078345526,"results":"38","hashOfConfig":"22"},{"size":538,"mtime":1609078213921,"results":"39","hashOfConfig":"22"},{"size":1008,"mtime":1609091945720,"results":"40","hashOfConfig":"22"},{"size":1062,"mtime":1609098682238,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1c1ievv",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\React\\techkart\\client\\src\\index.js",[],["86","87"],"D:\\React\\techkart\\client\\src\\reportWebVitals.js",[],"D:\\React\\techkart\\client\\src\\App.js",["88","89","90"],"D:\\React\\techkart\\client\\src\\components\\Navbar\\Navbar.js",["91","92"],"D:\\React\\techkart\\client\\src\\components\\Auth\\Login\\Login.js",["93","94","95"],"import React, {useState, useEffect} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Divider, notification, Modal } from 'antd';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport {login, resendlink} from '../../../utils/auth-util';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\n\r\nimport '../../Auth/Auth.css';\r\nconst { confirm } = Modal;\r\n\r\nconst Login = ({history}) => {\r\n    const dispatch = useDispatch();\r\n    const {user} = useSelector(state => ({...state}));\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    \r\n    const openNotificationWithIcon = (type, msgTitle, msgBody)  => {\r\n        notification[type]({\r\n          message: msgTitle,\r\n          description: msgBody\r\n        });\r\n    };\r\n\r\n    const showConfirm = (content) => {\r\n        confirm({\r\n          title: 'Email verification failed',\r\n          icon: <ExclamationCircleOutlined />,\r\n          content: content,\r\n          centered: true,\r\n          async onOk() {\r\n            let res;\r\n            try{\r\n                res = await resendlink(email);\r\n                openNotificationWithIcon('success','Email verification link resent', 'Email verification link has been sent to your email.');\r\n                history.push(\"/login\");\r\n            }\r\n            catch(err){\r\n                setLoading(false);\r\n                openNotificationWithIcon('error',err.response.statusText, err.response.data.msg);\r\n            }\r\n          },\r\n          onCancel() {\r\n            console.log('Cancel');\r\n          },\r\n        });\r\n      }\r\n    \r\n    const loginHandler = async(e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        let res;\r\n        try{\r\n            res = await login(email, password);\r\n            // openNotificationWithIcon('success',res.data.name, res.data.token);\r\n            localStorage.setItem(\"techkart-user\", JSON.stringify({name: res.data.name, email: res.data.email, authtoken: res.data.token, role: res.data.role, _id: res.data.userId}))\r\n            dispatch({\r\n                type: 'LOGGED_IN',\r\n                payload: {\r\n                  name: res.data.name,\r\n                  email: res.data.email,\r\n                  authtoken: res.data.token,\r\n                  role: res.data.role,\r\n                  _id: res.data.userId\r\n                }\r\n            });\r\n            history.push(\"/\");\r\n        }\r\n        catch(err){\r\n            setLoading(false);\r\n            if(err.response.data.msg === \"Your Email has not been verified.\"){\r\n                showConfirm(`${err.response.data.msg} Do you want to resend email verification link?`);\r\n            }\r\n            else{\r\n                openNotificationWithIcon('error',err.response.statusText, err.response.data.msg);\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(user && user.token){\r\n            history.push(\"/\");\r\n        }\r\n    }, [user])\r\n    return (\r\n        <div className=\"login-signup__container\">\r\n            <form onSubmit={loginHandler}>\r\n                <h1>Sign In</h1>\r\n                <div className=\"login-signup__form-group\">\r\n                    <input type=\"text\" required=\"required\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n                    <label htmlFor=\"input\" className=\"login-signup__control-label\">Your email</label><i className=\"login-signup__bar\"></i>\r\n                </div>\r\n                <div className=\"login-signup__form-group\">\r\n                    <input type=\"password\" required=\"required\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n                    <label htmlFor=\"input\" className=\"login-signup__control-label\">Your password</label><i className=\"login-signup__bar\"></i>\r\n                </div>\r\n                <p className=\"login__forgot-password\"><Link to=\"/forgot/password\">Forgot Password?</Link></p>\r\n                <button type=\"submit\" className=\"login-signup__button\" >Sign In</button>\r\n                <Divider />\r\n                <p className=\"login-signup__not-already-member\">Not a member? <Link to=\"/signup\">Sign Up</Link></p>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;\r\n","D:\\React\\techkart\\client\\src\\components\\Auth\\SignUp\\SignUp.js",["96"],"import React, {useState} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Divider, notification } from 'antd';\r\nimport {signUp} from '../../../utils/auth-util';\r\n\r\nconst SignUp = ({history}) => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    \r\n    const openNotificationWithIcon = (type, msgTitle, msgBody)  => {\r\n        notification[type]({\r\n          message: msgTitle,\r\n          description: msgBody\r\n        });\r\n    };\r\n    \r\n    const signUpHandler = async(e) => {\r\n        e.preventDefault();\r\n        if(password !== confirmPassword){\r\n            openNotificationWithIcon('error',\"Password mismatch\", \"Password and confirm password do not match.\");\r\n            setLoading(false);\r\n            return;\r\n        }\r\n        setLoading(true);\r\n        let res;\r\n        try{\r\n            res = await signUp(name, email, password);\r\n            openNotificationWithIcon('success',res.data.statusText, res.data);\r\n            history.push(\"/login\");\r\n        }\r\n        catch(err){\r\n            setLoading(false);\r\n            openNotificationWithIcon('error',err.response.statusText, err.response.data.msg);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"login-signup__container signup__container\">\r\n            <form onSubmit={signUpHandler}>\r\n                <h1>Sign Up</h1>\r\n                <div className=\"login-signup__form-group\">\r\n                    <input type=\"text\" required=\"required\" value={name} onChange={(e) => setName(e.target.value)}/>\r\n                    <label htmlFor=\"input\" className=\"login-signup__control-label\">Your name</label><i className=\"login-signup__bar\"></i>\r\n                </div>\r\n                <div className=\"login-signup__form-group\">\r\n                    <input type=\"text\" required=\"required\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n                    <label htmlFor=\"input\" className=\"login-signup__control-label\">Your email</label><i className=\"login-signup__bar\"></i>\r\n                </div>\r\n                <div className=\"login-signup__form-group\">\r\n                    <input type=\"password\" required=\"required\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n                    <label htmlFor=\"input\" className=\"login-signup__control-label\">Your password</label><i className=\"login-signup__bar\"></i>\r\n                </div>\r\n                <div className=\"login-signup__form-group\">\r\n                    <input type=\"password\" required=\"required\" value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)}/>\r\n                    <label htmlFor=\"input\" className=\"login-signup__control-label\">Confirm password</label><i className=\"login-signup__bar\"></i>\r\n                </div>\r\n                <button type=\"submit\" className=\"login-signup__button\">Sign Up</button>\r\n                <Divider />\r\n                <p className=\"login-signup__not-already-member\">Already a member? <Link to=\"/login\">Sign In</Link></p>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUp;","D:\\React\\techkart\\client\\src\\utils\\auth-util.js",[],"D:\\React\\techkart\\client\\src\\components\\Auth\\Confirmation\\Confirmation.js",["97","98","99","100"],"import React, {useEffect, useState} from 'react';\r\nimport {confirmation, resendlink} from '../../../utils/auth-util';\r\nimport { notification, Modal } from 'antd';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\n\r\nconst { confirm } = Modal;\r\n\r\nconst Confirmation = ({history, match}) => {\r\n    const openNotificationWithIcon = (type, msgTitle, msgBody)  => {\r\n        notification[type]({\r\n          message: msgTitle,\r\n          description: msgBody\r\n        });\r\n    };\r\n\r\n    const verifyEmail = async() => {\r\n        let res;\r\n        try{\r\n            res = await confirmation(match.params.email, match.params.token);\r\n            openNotificationWithIcon('success', 'Email verification successful', 'Your email address has been verified succesfully.');\r\n            history.push(\"/\");\r\n        }\r\n        catch(err){\r\n            if(err.response.status === 400){\r\n                showConfirm(`${err.response.data.msg} Do you want to resend email verification link?`);\r\n            }\r\n            else{\r\n                openNotificationWithIcon('error', 'Email verification failed', err.response.data.msg);\r\n                history.push(\"/login\");\r\n            }\r\n        }\r\n    }\r\n\r\n    const showConfirm = (content) => {\r\n        confirm({\r\n          title: 'Email verification failed',\r\n          icon: <ExclamationCircleOutlined />,\r\n          content: content,\r\n          centered: true,\r\n          async onOk() {\r\n            let res;\r\n            try{\r\n                res = await resendlink(match.params.email);\r\n                openNotificationWithIcon('success','Email verification link resent', 'Email verification link has been sent to your email.');\r\n                history.push(\"/login\");\r\n            }\r\n            catch(err){\r\n                openNotificationWithIcon('error',err.response.statusText, err.response.data.msg);\r\n                history.push('/login');\r\n            }\r\n          },\r\n          onCancel() {\r\n            history.push('/login');\r\n          },\r\n        });\r\n      }\r\n\r\n    useEffect(() => {\r\n        verifyEmail();\r\n    }, []);\r\n    return (\r\n        <>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Confirmation;\r\n","D:\\React\\techkart\\client\\src\\Reducers\\index.js",[],"D:\\React\\techkart\\client\\src\\Reducers\\userReducer.js",[],"D:\\React\\techkart\\client\\src\\components\\LoadingSpinner\\LoadingSpinner.js",[],"D:\\React\\techkart\\client\\src\\components\\AdminDashboard\\AdminLeftNav.js",[],"D:\\React\\techkart\\client\\src\\components\\Routes\\AdminRoute.js",[],"D:\\React\\techkart\\client\\src\\components\\Routes\\UserRoute.js",[],"D:\\React\\techkart\\client\\src\\pages\\ManageCategory.js",["101"],"D:\\React\\techkart\\client\\src\\pages\\ManageSubCategories.js",["102"],"D:\\React\\techkart\\client\\src\\pages\\ManageProducts.js",["103"],"D:\\React\\techkart\\client\\src\\pages\\ManageBannerImages.js",["104"],"D:\\React\\techkart\\client\\src\\utils\\categories-util.js",[],"D:\\React\\techkart\\client\\src\\utils\\subcategories-util.js",[],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":12,"column":8,"nodeType":"111","messageId":"112","endLine":12,"endColumn":17},{"ruleId":"109","severity":1,"message":"113","line":22,"column":10,"nodeType":"111","messageId":"112","endLine":22,"endColumn":14},{"ruleId":"114","severity":1,"message":"115","line":79,"column":6,"nodeType":"116","endLine":79,"endColumn":8,"suggestions":"117"},{"ruleId":"109","severity":1,"message":"118","line":10,"column":13,"nodeType":"111","messageId":"112","endLine":10,"endColumn":19},{"ruleId":"109","severity":1,"message":"119","line":11,"column":11,"nodeType":"111","messageId":"112","endLine":11,"endColumn":19},{"ruleId":"109","severity":1,"message":"120","line":16,"column":12,"nodeType":"111","messageId":"112","endLine":16,"endColumn":19},{"ruleId":"109","severity":1,"message":"121","line":34,"column":17,"nodeType":"111","messageId":"112","endLine":34,"endColumn":20},{"ruleId":"114","severity":1,"message":"122","line":84,"column":8,"nodeType":"116","endLine":84,"endColumn":14,"suggestions":"123"},{"ruleId":"109","severity":1,"message":"120","line":11,"column":12,"nodeType":"111","messageId":"112","endLine":11,"endColumn":19},{"ruleId":"109","severity":1,"message":"124","line":1,"column":27,"nodeType":"111","messageId":"112","endLine":1,"endColumn":35},{"ruleId":"109","severity":1,"message":"121","line":19,"column":13,"nodeType":"111","messageId":"112","endLine":19,"endColumn":16},{"ruleId":"109","severity":1,"message":"121","line":43,"column":17,"nodeType":"111","messageId":"112","endLine":43,"endColumn":20},{"ruleId":"114","severity":1,"message":"125","line":60,"column":8,"nodeType":"116","endLine":60,"endColumn":10,"suggestions":"126"},{"ruleId":"114","severity":1,"message":"127","line":88,"column":8,"nodeType":"116","endLine":88,"endColumn":10,"suggestions":"128"},{"ruleId":"114","severity":1,"message":"129","line":118,"column":8,"nodeType":"116","endLine":118,"endColumn":10,"suggestions":"130"},{"ruleId":"109","severity":1,"message":"131","line":4,"column":10,"nodeType":"111","messageId":"112","endLine":4,"endColumn":17},{"ruleId":"109","severity":1,"message":"131","line":4,"column":10,"nodeType":"111","messageId":"112","endLine":4,"endColumn":17},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"no-unused-vars","'UserRoute' is defined but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'persistUser'. Either include it or remove the dependency array.","ArrayExpression",["134"],"'Search' is assigned a value but never used.","'onSearch' is assigned a value but never used.","'loading' is assigned a value but never used.","'res' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["135"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'verifyEmail'. Either include it or remove the dependency array.",["136"],"React Hook useEffect has a missing dependency: 'fetchCategories'. Either include it or remove the dependency array.",["137"],"React Hook useEffect has missing dependencies: 'fetchCategories' and 'fetchSubCategories'. Either include them or remove the dependency array.",["138"],"'Divider' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},"Update the dependencies array to be: [persistUser]",{"range":"149","text":"150"},"Update the dependencies array to be: [history, user]",{"range":"151","text":"152"},"Update the dependencies array to be: [verifyEmail]",{"range":"153","text":"154"},"Update the dependencies array to be: [fetchCategories]",{"range":"155","text":"156"},"Update the dependencies array to be: [fetchCategories, fetchSubCategories]",{"range":"157","text":"158"},[2684,2686],"[persistUser]",[2998,3004],"[history, user]",[2088,2090],"[verifyEmail]",[3483,3485],"[fetchCategories]",[4662,4664],"[fetchCategories, fetchSubCategories]"]